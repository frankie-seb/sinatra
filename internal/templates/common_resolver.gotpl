// Code generated by Frankie Health Generator, DO NOT EDIT.

package {{.PackageName}}

import (
	"context"
	"errors"
	"strings"

	{{ range $import := $.Imports }}
		{{ $import.Alias }} "{{ $import.ImportPath }}"
	{{ end }}
)


{{ if .HasRoot }}
	type {{.ResolverType}} struct {
	}

	func New() *Resolver {
		return &Resolver{}
	}
{{ end }}

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
{{- if .IsFederatedServer }}
type entityResolver struct{ *Resolver }
{{ end }}

func (r *Resolver) Mutation() fm.MutationResolver { return &mutationResolver{r} }
func (r *Resolver) Query() fm.QueryResolver       { return &queryResolver{r} }
{{- if .IsFederatedServer }}
func (r *Resolver) Entity() fm.EntityResolver     { return &entityResolver{r} }
{{ end }}

const inputKey = "input"

func (r *queryResolver) Node(ctx context.Context, globalGraphID string) (fm.Node, error) {
	splitID := strings.SplitN(globalGraphID, "-", 1)
	if len(splitID) != 2 {
		return nil, errors.New("could not parse id")
	}

	model := splitID[0]
	switch model {
		{{ range $model := .Models -}}
		{{ if .IsNormal  -}}
		case "{{$model.Name}}":
			return r.{{$model.Name}}(ctx, globalGraphID)
		{{ end -}}
		{{ end -}}

		default:
			return nil, errors.New("could not find corresponding model for id")
	}
}
{{ if (ne .RemainingSource "") }}
    // !!! WARNING !!!
    // The code below was going to be deleted when updating resolvers. It has been copied here so you have
    // one last chance to move it out of harms way if you want. There are two reasons this happens:
	//  - When renaming or deleting a resolver the old code will be put in here. You can safely delete
	//    it when you're done.
	//  - You have helper methods in this file. Move them out to keep these resolver files clean.
	{{ .RemainingSource }}
{{ end }}
